-- phpMyAdmin SQL Dump
-- version 4.9.2
-- https://www.phpmyadmin.net/
--
-- Anamakine: 127.0.0.1:3306
-- Üretim Zamanı: 10 May 2020, 17:47:51
-- Sunucu sürümü: 10.4.10-MariaDB
-- PHP Sürümü: 7.3.12

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
SET AUTOCOMMIT = 0;
START TRANSACTION;
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;

--
-- Veritabanı: `my_blog`
--

-- --------------------------------------------------------

--
-- Tablo için tablo yapısı `blog_category`
--

DROP TABLE IF EXISTS `blog_category`;
CREATE TABLE IF NOT EXISTS `blog_category` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `title` varchar(100) COLLATE utf8_turkish_ci NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=249 DEFAULT CHARSET=utf8 COLLATE=utf8_turkish_ci;

--
-- Tablo döküm verisi `blog_category`
--

INSERT INTO `blog_category` (`id`, `title`) VALUES
(243, 'Yazılım'),
(244, 'özgür'),
(245, 'Html'),
(246, 'Gezi Yazıları'),
(247, 'jqery'),
(248, 'css');

-- --------------------------------------------------------

--
-- Tablo için tablo yapısı `blog_content`
--

DROP TABLE IF EXISTS `blog_content`;
CREATE TABLE IF NOT EXISTS `blog_content` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `title` varchar(100) COLLATE utf8_turkish_ci NOT NULL,
  `text` longtext COLLATE utf8_turkish_ci NOT NULL,
  `tarih` datetime NOT NULL,
  `labels` text COLLATE utf8_turkish_ci NOT NULL,
  `visibility` int(1) NOT NULL,
  `category_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `blog_content` (`category_id`)
) ENGINE=InnoDB AUTO_INCREMENT=329 DEFAULT CHARSET=utf8 COLLATE=utf8_turkish_ci;

--
-- Tablo döküm verisi `blog_content`
--

INSERT INTO `blog_content` (`id`, `title`, `text`, `tarih`, `labels`, `visibility`, `category_id`) VALUES
(195, 'İlk Yazım', '&lt;p&gt;Bu benim kendi ellerimle kodladığım blog&amp;#39;umdaki ilk yazım. Buradan b&amp;uuml;t&amp;uuml;n blog d&amp;uuml;nyasına&lt;/p&gt;\r\n\r\n&lt;pre&gt;\r\n&lt;code&gt;$say = &quot;Hello World&quot;;\r\necho $say;&lt;/code&gt;&lt;/pre&gt;', '2020-05-07 00:00:00', 'özgür köktürk, blog, yazılım, ilk yazım', 1, 243),
(199, 'Php\'ye Nereden Başlanır, Nasıl Başlanır? Rehber Niteliğince', '&lt;p&gt;asd&lt;/p&gt;', '2020-05-16 00:00:00', 'yazılım ve okul, alaylı yazılımcı', 1, 243),
(209, 'İğneada Turu', '&lt;p&gt;Gelelim İğneada&amp;rsquo;da neler yapabileceğinize. Biz her gittiğimizde dopdolu ge&amp;ccedil;iriyoruz g&amp;uuml;nlerimizi. &amp;Ccedil;&amp;uuml;nk&amp;uuml; doğada yapabilecekleriniz sizin hayal g&amp;uuml;c&amp;uuml;n&amp;uuml;zle sınırlı. İğneada&amp;rsquo;da gezilecek yerlerin hepsi doğanın i&amp;ccedil;inde. Bir kere longoz(subasar) ormanlarını keşfe kesinlikle &amp;ccedil;ıkmalısınız. Bunun birka&amp;ccedil; yolu var. Bunlardan bence en harikası Mert G&amp;ouml;l&amp;uuml; &amp;uuml;zerinden kanoyla gitmek. Bunu yapabilmek i&amp;ccedil;in Pan İğneada veya İğneada Resort&amp;rsquo;tan bir kano kiralamanız gerekiyor. İlk defa gidecekseniz rehber eşliğinde kendinizi her şeyden soyutlayacağınız bir saate doğru k&amp;uuml;rek &amp;ccedil;ekmeye başlıyorsunuz. Hayatın ne kadar g&amp;uuml;zel olduğunu y&amp;uuml;z&amp;uuml;n&amp;uuml;ze &amp;ccedil;arpan zamanlardan olduğunu d&amp;uuml;ş&amp;uuml;n&amp;uuml;yorum bu gezintinin. K&amp;uuml;&amp;ccedil;&amp;uuml;k bir tavsiye, turunuz sırasında klasik m&amp;uuml;zik a&amp;ccedil;arsanız s&amp;uuml;per oluyor.&lt;/p&gt;\r\n\r\n&lt;p&gt;&lt;img alt=&quot;IMG_0884&quot; src=&quot;https://i0.wp.com/hohhoyyt.com/wp-content/uploads/2016/04/img_0884.jpg?resize=730%2C430&amp;amp;ssl=1&quot; style=&quot;height:430px; width:730px&quot; /&gt;&lt;/p&gt;\r\n\r\n&lt;p&gt;&lt;strong&gt;İğneada Konaklama&lt;/strong&gt;&lt;/p&gt;', '2020-05-08 00:00:00', 'iğneada', 1, 246),
(229, 'Php Sayfalama', '&lt;p&gt;In this tutorial,&amp;nbsp;we are going to&amp;nbsp;&lt;strong&gt;create pagination with PHP and MySql&lt;/strong&gt;. It is probably possible that your SQL SELECT query may return results into thousand and millions of records. And it is obviously not a good idea to display all those results on a single page. So we can split this result into multiple pages.&lt;/p&gt;\r\n\r\n&lt;h2&gt;What is Pagination?&lt;/h2&gt;\r\n\r\n&lt;p&gt;Paging means displaying all your fetched results in multiple pages instead of showing them all on one page. It makes that page so long and would take so much time to load.&lt;/p&gt;\r\n\r\n&lt;h3&gt;How to&amp;nbsp;create Pagination with PHP and MySql&lt;/h3&gt;\r\n\r\n&lt;p&gt;MySQL&amp;rsquo;s&amp;nbsp;&lt;strong&gt;LIMIT&lt;/strong&gt;&amp;nbsp;clause&amp;nbsp;helps us to create a pagination feature.&amp;nbsp;It uses two arguments First argument as&amp;nbsp;&lt;code&gt;OFFSET&lt;/code&gt;&amp;nbsp;and the second argument&amp;nbsp;&lt;strong&gt;the number of records&lt;/strong&gt;&amp;nbsp;which will be returned from the database.&lt;/p&gt;\r\n\r\n&lt;p&gt;You can find ajax version for this tutorial in my other article&amp;nbsp;&lt;a href=&quot;https://www.myprogrammingtutorials.com/infinite-scroll-pagination-with-php-and-ajax.html&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;ajax pagination&lt;/a&gt;&amp;nbsp;here.&lt;/p&gt;\r\n\r\n&lt;p&gt;Follow these simple steps to&amp;nbsp;&lt;strong&gt;create pagination in PHP &amp;ndash;&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;\r\n\r\n&lt;p&gt;&lt;strong&gt;1. Get the current page number&lt;/strong&gt;&lt;/p&gt;\r\n\r\n&lt;p&gt;This code will get the current&amp;nbsp;page number with the help of&amp;nbsp;&lt;strong&gt;&lt;code&gt;$_GET&lt;/code&gt;&amp;nbsp;&lt;/strong&gt;Array&lt;strong&gt;.&lt;/strong&gt;&amp;nbsp;Note that if it is not present it will set the&amp;nbsp;default page number to 1.&lt;/p&gt;\r\n\r\n&lt;pre&gt;\r\n&lt;code&gt;\r\nif (isset($_GET[\'pageno\'])) {\r\n    $pageno = $_GET[\'pageno\'];\r\n} else {\r\n    $pageno = 1;\r\n}\r\n&lt;/code&gt;&lt;/pre&gt;\r\n\r\n&lt;p&gt;&amp;nbsp;&lt;/p&gt;\r\n\r\n&lt;p&gt;&lt;strong&gt;2. The formula for php pagination&lt;/strong&gt;&lt;/p&gt;\r\n\r\n&lt;p&gt;You can always manage the number of records to be displayed in a page by changing the value of&amp;nbsp;&lt;code&gt;$no_of_records_per_page&lt;/code&gt;&amp;nbsp;variable.&lt;/p&gt;\r\n\r\n&lt;pre&gt;\r\n&lt;code&gt;\r\n$no_of_records_per_page = 10;\r\n$offset = ($pageno-1) * $no_of_records_per_page; &lt;/code&gt;&lt;/pre&gt;\r\n\r\n&lt;p&gt;&amp;nbsp;&lt;/p&gt;\r\n\r\n&lt;p&gt;&lt;strong&gt;3. Get the number of total number of pages&lt;/strong&gt;&lt;/p&gt;\r\n\r\n&lt;pre&gt;\r\n&lt;code&gt;\r\n$total_pages_sql = &quot;SELECT COUNT(*) FROM table&quot;;\r\n$result = mysqli_query($conn,$total_pages_sql);\r\n$total_rows = mysqli_fetch_array($result)[0];\r\n$total_pages = ceil($total_rows / $no_of_records_per_page);\r\n&lt;/code&gt;&lt;/pre&gt;\r\n\r\n&lt;p&gt;&amp;nbsp;&lt;/p&gt;\r\n\r\n&lt;p&gt;&lt;strong&gt;4. Constructing&amp;nbsp;the SQL Query for pagination&lt;/strong&gt;&lt;/p&gt;\r\n\r\n&lt;pre&gt;\r\n&lt;code&gt;\r\n$sql = &quot;SELECT * FROM table LIMIT $offset, $no_of_records_per_page&quot;; &lt;/code&gt;&lt;/pre&gt;\r\n\r\n&lt;p&gt;&amp;nbsp;&lt;/p&gt;\r\n\r\n&lt;p&gt;&lt;strong&gt;5. Pagination buttons&lt;/strong&gt;&lt;/p&gt;\r\n\r\n&lt;p&gt;These Buttons are served to users as&amp;nbsp;&lt;code&gt;Next Page&lt;/code&gt;&amp;nbsp;&amp;amp;&amp;nbsp;&lt;code&gt;Previous Page&lt;/code&gt;, so that they can easily navigate through you pages. Here I am using&amp;nbsp;&lt;a href=&quot;https://www.w3schools.com/Bootstrap/bootstrap_pagination.asp&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;bootstrap&amp;rsquo;s pagination&lt;/a&gt;&amp;nbsp;button, you can use your own buttons if you want.&lt;/p&gt;\r\n\r\n&lt;pre&gt;\r\n&lt;code&gt;\r\n&amp;lt;ul class=&quot;pagination&quot;&amp;gt;\r\n    &amp;lt;li&amp;gt;&amp;lt;a href=&quot;?pageno=1&quot;&amp;gt;First&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;\r\n    &amp;lt;li class=&quot;&amp;lt;?php if($pageno &amp;lt;= 1){ echo \'disabled\'; } ?&amp;gt;&quot;&amp;gt;\r\n        &amp;lt;a href=&quot;&amp;lt;?php if($pageno &amp;lt;= 1){ echo \'#\'; } else { echo &quot;?pageno=&quot;.($pageno - 1); } ?&amp;gt;&quot;&amp;gt;Prev&amp;lt;/a&amp;gt;\r\n    &amp;lt;/li&amp;gt;\r\n    &amp;lt;li class=&quot;&amp;lt;?php if($pageno &amp;gt;= $total_pages){ echo \'disabled\'; } ?&amp;gt;&quot;&amp;gt;\r\n        &amp;lt;a href=&quot;&amp;lt;?php if($pageno &amp;gt;= $total_pages){ echo \'#\'; } else { echo &quot;?pageno=&quot;.($pageno + 1); } ?&amp;gt;&quot;&amp;gt;Next&amp;lt;/a&amp;gt;\r\n    &amp;lt;/li&amp;gt;\r\n    &amp;lt;li&amp;gt;&amp;lt;a href=&quot;?pageno=&amp;lt;?php echo $total_pages; ?&amp;gt;&quot;&amp;gt;Last&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;\r\n&amp;lt;/ul&amp;gt;\r\n&lt;/code&gt;&lt;/pre&gt;\r\n\r\n&lt;p&gt;&amp;nbsp;&lt;/p&gt;\r\n\r\n&lt;p&gt;&lt;strong&gt;6. Let&amp;rsquo;s assemble all the codes in one page&lt;/strong&gt;&lt;/p&gt;\r\n\r\n&lt;pre&gt;\r\n&lt;code&gt;\r\n&amp;lt;html&amp;gt;\r\n&amp;lt;head&amp;gt;\r\n    &amp;lt;title&amp;gt;Pagination&amp;lt;/title&amp;gt;\r\n    &amp;lt;!-- Bootstrap CDN --&amp;gt;\r\n    &amp;lt;link rel=&quot;stylesheet&quot; href=&quot;https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css&quot;&amp;gt;\r\n    &amp;lt;script src=&quot;https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;\r\n    &amp;lt;script src=&quot;https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;\r\n&amp;lt;/head&amp;gt;\r\n&amp;lt;body&amp;gt;\r\n    &amp;lt;?php\r\n\r\n        if (isset($_GET[\'pageno\'])) {\r\n            $pageno = $_GET[\'pageno\'];\r\n        } else {\r\n            $pageno = 1;\r\n        }\r\n        $no_of_records_per_page = 10;\r\n        $offset = ($pageno-1) * $no_of_records_per_page;\r\n\r\n        $conn=mysqli_connect(&quot;localhost&quot;,&quot;my_user&quot;,&quot;my_password&quot;,&quot;my_db&quot;);\r\n        // Check connection\r\n        if (mysqli_connect_errno()){\r\n            echo &quot;Failed to connect to MySQL: &quot; . mysqli_connect_error();\r\n            die();\r\n        }\r\n\r\n        $total_pages_sql = &quot;SELECT COUNT(*) FROM table&quot;;\r\n        $result = mysqli_query($conn,$total_pages_sql);\r\n        $total_rows = mysqli_fetch_array($result)[0];\r\n        $total_pages = ceil($total_rows / $no_of_records_per_page);\r\n\r\n        $sql = &quot;SELECT * FROM table LIMIT $offset, $no_of_records_per_page&quot;;\r\n        $res_data = mysqli_query($conn,$sql);\r\n        while($row = mysqli_fetch_array($res_data)){\r\n            //here goes the data\r\n        }\r\n        mysqli_close($conn);\r\n    ?&amp;gt;\r\n    &amp;lt;ul class=&quot;pagination&quot;&amp;gt;\r\n        &amp;lt;li&amp;gt;&amp;lt;a href=&quot;?pageno=1&quot;&amp;gt;First&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;\r\n        &amp;lt;li class=&quot;&amp;lt;?php if($pageno &amp;lt;= 1){ echo \'disabled\'; } ?&amp;gt;&quot;&amp;gt;\r\n            &amp;lt;a href=&quot;&amp;lt;?php if($pageno &amp;lt;= 1){ echo \'#\'; } else { echo &quot;?pageno=&quot;.($pageno - 1); } ?&amp;gt;&quot;&amp;gt;Prev&amp;lt;/a&amp;gt;\r\n        &amp;lt;/li&amp;gt;\r\n        &amp;lt;li class=&quot;&amp;lt;?php if($pageno &amp;gt;= $total_pages){ echo \'disabled\'; } ?&amp;gt;&quot;&amp;gt;\r\n            &amp;lt;a href=&quot;&amp;lt;?php if($pageno &amp;gt;= $total_pages){ echo \'#\'; } else { echo &quot;?pageno=&quot;.($pageno + 1); } ?&amp;gt;&quot;&amp;gt;Next&amp;lt;/a&amp;gt;\r\n        &amp;lt;/li&amp;gt;\r\n        &amp;lt;li&amp;gt;&amp;lt;a href=&quot;?pageno=&amp;lt;?php echo $total_pages; ?&amp;gt;&quot;&amp;gt;Last&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;\r\n    &amp;lt;/ul&amp;gt;\r\n&amp;lt;/body&amp;gt;\r\n&amp;lt;/html&amp;gt;\r\n&lt;/code&gt;&lt;/pre&gt;\r\n\r\n&lt;p&gt;That&amp;rsquo;s all!&lt;/p&gt;\r\n\r\n&lt;p&gt;If you find this article helpful, don&amp;rsquo;t forget to share it with your friends. And stay updated with us by subscribing our blog&lt;/p&gt;', '2020-05-09 00:00:00', 'php, pagination, sayfalama, sayfa numaraları yapma', 1, 243),
(232, 'Php Sayfalama', '&lt;p&gt;In this tutorial,&amp;nbsp;we are going to&amp;nbsp;&lt;strong&gt;create pagination with PHP and MySql&lt;/strong&gt;. It is probably possible that your SQL SELECT query may return results into thousand and millions of records. And it is obviously not a good idea to display all those results on a single page. So we can split this result into multiple pages.&lt;/p&gt;\r\n\r\n&lt;h2&gt;What is Pagination?&lt;/h2&gt;\r\n\r\n&lt;p&gt;Paging means displaying all your fetched results in multiple pages instead of showing them all on one page. It makes that page so long and would take so much time to load.&lt;/p&gt;\r\n\r\n&lt;h3&gt;How to&amp;nbsp;create Pagination with PHP and MySql&lt;/h3&gt;\r\n\r\n&lt;p&gt;MySQL&amp;rsquo;s&amp;nbsp;&lt;strong&gt;LIMIT&lt;/strong&gt;&amp;nbsp;clause&amp;nbsp;helps us to create a pagination feature.&amp;nbsp;It uses two arguments First argument as&amp;nbsp;&lt;code&gt;OFFSET&lt;/code&gt;&amp;nbsp;and the second argument&amp;nbsp;&lt;strong&gt;the number of records&lt;/strong&gt;&amp;nbsp;which will be returned from the database.&lt;/p&gt;\r\n\r\n&lt;p&gt;You can find ajax version for this tutorial in my other article&amp;nbsp;&lt;a href=&quot;https://www.myprogrammingtutorials.com/infinite-scroll-pagination-with-php-and-ajax.html&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;ajax pagination&lt;/a&gt;&amp;nbsp;here.&lt;/p&gt;\r\n\r\n&lt;p&gt;Follow these simple steps to&amp;nbsp;&lt;strong&gt;create pagination in PHP &amp;ndash;&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;\r\n\r\n&lt;p&gt;&lt;strong&gt;1. Get the current page number&lt;/strong&gt;&lt;/p&gt;\r\n\r\n&lt;p&gt;This code will get the current&amp;nbsp;page number with the help of&amp;nbsp;&lt;strong&gt;&lt;code&gt;$_GET&lt;/code&gt;&amp;nbsp;&lt;/strong&gt;Array&lt;strong&gt;.&lt;/strong&gt;&amp;nbsp;Note that if it is not present it will set the&amp;nbsp;default page number to 1.&lt;/p&gt;\r\n\r\n&lt;pre&gt;\r\n&lt;code&gt;\r\nif (isset($_GET[\'pageno\'])) {\r\n    $pageno = $_GET[\'pageno\'];\r\n} else {\r\n    $pageno = 1;\r\n}\r\n&lt;/code&gt;&lt;/pre&gt;\r\n\r\n&lt;p&gt;&amp;nbsp;&lt;/p&gt;\r\n\r\n&lt;p&gt;&lt;strong&gt;2. The formula for php pagination&lt;/strong&gt;&lt;/p&gt;\r\n\r\n&lt;p&gt;You can always manage the number of records to be displayed in a page by changing the value of&amp;nbsp;&lt;code&gt;$no_of_records_per_page&lt;/code&gt;&amp;nbsp;variable.&lt;/p&gt;\r\n\r\n&lt;pre&gt;\r\n&lt;code&gt;\r\n$no_of_records_per_page = 10;\r\n$offset = ($pageno-1) * $no_of_records_per_page; &lt;/code&gt;&lt;/pre&gt;\r\n\r\n&lt;p&gt;&amp;nbsp;&lt;/p&gt;\r\n\r\n&lt;p&gt;&lt;strong&gt;3. Get the number of total number of pages&lt;/strong&gt;&lt;/p&gt;\r\n\r\n&lt;pre&gt;\r\n&lt;code&gt;\r\n$total_pages_sql = &quot;SELECT COUNT(*) FROM table&quot;;\r\n$result = mysqli_query($conn,$total_pages_sql);\r\n$total_rows = mysqli_fetch_array($result)[0];\r\n$total_pages = ceil($total_rows / $no_of_records_per_page);\r\n&lt;/code&gt;&lt;/pre&gt;\r\n\r\n&lt;p&gt;&amp;nbsp;&lt;/p&gt;\r\n\r\n&lt;p&gt;&lt;strong&gt;4. Constructing&amp;nbsp;the SQL Query for pagination&lt;/strong&gt;&lt;/p&gt;\r\n\r\n&lt;pre&gt;\r\n&lt;code&gt;\r\n$sql = &quot;SELECT * FROM table LIMIT $offset, $no_of_records_per_page&quot;; &lt;/code&gt;&lt;/pre&gt;\r\n\r\n&lt;p&gt;&amp;nbsp;&lt;/p&gt;\r\n\r\n&lt;p&gt;&lt;strong&gt;5. Pagination buttons&lt;/strong&gt;&lt;/p&gt;\r\n\r\n&lt;p&gt;These Buttons are served to users as&amp;nbsp;&lt;code&gt;Next Page&lt;/code&gt;&amp;nbsp;&amp;amp;&amp;nbsp;&lt;code&gt;Previous Page&lt;/code&gt;, so that they can easily navigate through you pages. Here I am using&amp;nbsp;&lt;a href=&quot;https://www.w3schools.com/Bootstrap/bootstrap_pagination.asp&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;bootstrap&amp;rsquo;s pagination&lt;/a&gt;&amp;nbsp;button, you can use your own buttons if you want.&lt;/p&gt;\r\n\r\n&lt;pre&gt;\r\n&lt;code&gt;\r\n&amp;lt;ul class=&quot;pagination&quot;&amp;gt;\r\n    &amp;lt;li&amp;gt;&amp;lt;a href=&quot;?pageno=1&quot;&amp;gt;First&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;\r\n    &amp;lt;li class=&quot;&amp;lt;?php if($pageno &amp;lt;= 1){ echo \'disabled\'; } ?&amp;gt;&quot;&amp;gt;\r\n        &amp;lt;a href=&quot;&amp;lt;?php if($pageno &amp;lt;= 1){ echo \'#\'; } else { echo &quot;?pageno=&quot;.($pageno - 1); } ?&amp;gt;&quot;&amp;gt;Prev&amp;lt;/a&amp;gt;\r\n    &amp;lt;/li&amp;gt;\r\n    &amp;lt;li class=&quot;&amp;lt;?php if($pageno &amp;gt;= $total_pages){ echo \'disabled\'; } ?&amp;gt;&quot;&amp;gt;\r\n        &amp;lt;a href=&quot;&amp;lt;?php if($pageno &amp;gt;= $total_pages){ echo \'#\'; } else { echo &quot;?pageno=&quot;.($pageno + 1); } ?&amp;gt;&quot;&amp;gt;Next&amp;lt;/a&amp;gt;\r\n    &amp;lt;/li&amp;gt;\r\n    &amp;lt;li&amp;gt;&amp;lt;a href=&quot;?pageno=&amp;lt;?php echo $total_pages; ?&amp;gt;&quot;&amp;gt;Last&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;\r\n&amp;lt;/ul&amp;gt;\r\n&lt;/code&gt;&lt;/pre&gt;\r\n\r\n&lt;p&gt;&amp;nbsp;&lt;/p&gt;\r\n\r\n&lt;p&gt;&lt;strong&gt;6. Let&amp;rsquo;s assemble all the codes in one page&lt;/strong&gt;&lt;/p&gt;\r\n\r\n&lt;pre&gt;\r\n&lt;code&gt;\r\n&amp;lt;html&amp;gt;\r\n&amp;lt;head&amp;gt;\r\n    &amp;lt;title&amp;gt;Pagination&amp;lt;/title&amp;gt;\r\n    &amp;lt;!-- Bootstrap CDN --&amp;gt;\r\n    &amp;lt;link rel=&quot;stylesheet&quot; href=&quot;https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css&quot;&amp;gt;\r\n    &amp;lt;script src=&quot;https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;\r\n    &amp;lt;script src=&quot;https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;\r\n&amp;lt;/head&amp;gt;\r\n&amp;lt;body&amp;gt;\r\n    &amp;lt;?php\r\n\r\n        if (isset($_GET[\'pageno\'])) {\r\n            $pageno = $_GET[\'pageno\'];\r\n        } else {\r\n            $pageno = 1;\r\n        }\r\n        $no_of_records_per_page = 10;\r\n        $offset = ($pageno-1) * $no_of_records_per_page;\r\n\r\n        $conn=mysqli_connect(&quot;localhost&quot;,&quot;my_user&quot;,&quot;my_password&quot;,&quot;my_db&quot;);\r\n        // Check connection\r\n        if (mysqli_connect_errno()){\r\n            echo &quot;Failed to connect to MySQL: &quot; . mysqli_connect_error();\r\n            die();\r\n        }\r\n\r\n        $total_pages_sql = &quot;SELECT COUNT(*) FROM table&quot;;\r\n        $result = mysqli_query($conn,$total_pages_sql);\r\n        $total_rows = mysqli_fetch_array($result)[0];\r\n        $total_pages = ceil($total_rows / $no_of_records_per_page);\r\n\r\n        $sql = &quot;SELECT * FROM table LIMIT $offset, $no_of_records_per_page&quot;;\r\n        $res_data = mysqli_query($conn,$sql);\r\n        while($row = mysqli_fetch_array($res_data)){\r\n            //here goes the data\r\n        }\r\n        mysqli_close($conn);\r\n    ?&amp;gt;\r\n    &amp;lt;ul class=&quot;pagination&quot;&amp;gt;\r\n        &amp;lt;li&amp;gt;&amp;lt;a href=&quot;?pageno=1&quot;&amp;gt;First&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;\r\n        &amp;lt;li class=&quot;&amp;lt;?php if($pageno &amp;lt;= 1){ echo \'disabled\'; } ?&amp;gt;&quot;&amp;gt;\r\n            &amp;lt;a href=&quot;&amp;lt;?php if($pageno &amp;lt;= 1){ echo \'#\'; } else { echo &quot;?pageno=&quot;.($pageno - 1); } ?&amp;gt;&quot;&amp;gt;Prev&amp;lt;/a&amp;gt;\r\n        &amp;lt;/li&amp;gt;\r\n        &amp;lt;li class=&quot;&amp;lt;?php if($pageno &amp;gt;= $total_pages){ echo \'disabled\'; } ?&amp;gt;&quot;&amp;gt;\r\n            &amp;lt;a href=&quot;&amp;lt;?php if($pageno &amp;gt;= $total_pages){ echo \'#\'; } else { echo &quot;?pageno=&quot;.($pageno + 1); } ?&amp;gt;&quot;&amp;gt;Next&amp;lt;/a&amp;gt;\r\n        &amp;lt;/li&amp;gt;\r\n        &amp;lt;li&amp;gt;&amp;lt;a href=&quot;?pageno=&amp;lt;?php echo $total_pages; ?&amp;gt;&quot;&amp;gt;Last&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;\r\n    &amp;lt;/ul&amp;gt;\r\n&amp;lt;/body&amp;gt;\r\n&amp;lt;/html&amp;gt;\r\n&lt;/code&gt;&lt;/pre&gt;\r\n\r\n&lt;p&gt;That&amp;rsquo;s all!&lt;/p&gt;\r\n\r\n&lt;p&gt;If you find this article helpful, don&amp;rsquo;t forget to share it with your friends. And stay updated with us by subscribing our blog&lt;/p&gt;', '2020-05-09 00:00:00', 'php, pagination, sayfalama, sayfa numaraları yapma', 1, 243),
(233, 'Php Sayfalama', '&lt;p&gt;In this tutorial,&amp;nbsp;we are going to&amp;nbsp;&lt;strong&gt;create pagination with PHP and MySql&lt;/strong&gt;. It is probably possible that your SQL SELECT query may return results into thousand and millions of records. And it is obviously not a good idea to display all those results on a single page. So we can split this result into multiple pages.&lt;/p&gt;\r\n\r\n&lt;h2&gt;What is Pagination?&lt;/h2&gt;\r\n\r\n&lt;p&gt;Paging means displaying all your fetched results in multiple pages instead of showing them all on one page. It makes that page so long and would take so much time to load.&lt;/p&gt;\r\n\r\n&lt;h3&gt;How to&amp;nbsp;create Pagination with PHP and MySql&lt;/h3&gt;\r\n\r\n&lt;p&gt;MySQL&amp;rsquo;s&amp;nbsp;&lt;strong&gt;LIMIT&lt;/strong&gt;&amp;nbsp;clause&amp;nbsp;helps us to create a pagination feature.&amp;nbsp;It uses two arguments First argument as&amp;nbsp;&lt;code&gt;OFFSET&lt;/code&gt;&amp;nbsp;and the second argument&amp;nbsp;&lt;strong&gt;the number of records&lt;/strong&gt;&amp;nbsp;which will be returned from the database.&lt;/p&gt;\r\n\r\n&lt;p&gt;You can find ajax version for this tutorial in my other article&amp;nbsp;&lt;a href=&quot;https://www.myprogrammingtutorials.com/infinite-scroll-pagination-with-php-and-ajax.html&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;ajax pagination&lt;/a&gt;&amp;nbsp;here.&lt;/p&gt;\r\n\r\n&lt;p&gt;Follow these simple steps to&amp;nbsp;&lt;strong&gt;create pagination in PHP &amp;ndash;&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;\r\n\r\n&lt;p&gt;&lt;strong&gt;1. Get the current page number&lt;/strong&gt;&lt;/p&gt;\r\n\r\n&lt;p&gt;This code will get the current&amp;nbsp;page number with the help of&amp;nbsp;&lt;strong&gt;&lt;code&gt;$_GET&lt;/code&gt;&amp;nbsp;&lt;/strong&gt;Array&lt;strong&gt;.&lt;/strong&gt;&amp;nbsp;Note that if it is not present it will set the&amp;nbsp;default page number to 1.&lt;/p&gt;\r\n\r\n&lt;pre&gt;\r\n&lt;code&gt;\r\nif (isset($_GET[\'pageno\'])) {\r\n    $pageno = $_GET[\'pageno\'];\r\n} else {\r\n    $pageno = 1;\r\n}\r\n&lt;/code&gt;&lt;/pre&gt;\r\n\r\n&lt;p&gt;&amp;nbsp;&lt;/p&gt;\r\n\r\n&lt;p&gt;&lt;strong&gt;2. The formula for php pagination&lt;/strong&gt;&lt;/p&gt;\r\n\r\n&lt;p&gt;You can always manage the number of records to be displayed in a page by changing the value of&amp;nbsp;&lt;code&gt;$no_of_records_per_page&lt;/code&gt;&amp;nbsp;variable.&lt;/p&gt;\r\n\r\n&lt;pre&gt;\r\n&lt;code&gt;\r\n$no_of_records_per_page = 10;\r\n$offset = ($pageno-1) * $no_of_records_per_page; &lt;/code&gt;&lt;/pre&gt;\r\n\r\n&lt;p&gt;&amp;nbsp;&lt;/p&gt;\r\n\r\n&lt;p&gt;&lt;strong&gt;3. Get the number of total number of pages&lt;/strong&gt;&lt;/p&gt;\r\n\r\n&lt;pre&gt;\r\n&lt;code&gt;\r\n$total_pages_sql = &quot;SELECT COUNT(*) FROM table&quot;;\r\n$result = mysqli_query($conn,$total_pages_sql);\r\n$total_rows = mysqli_fetch_array($result)[0];\r\n$total_pages = ceil($total_rows / $no_of_records_per_page);\r\n&lt;/code&gt;&lt;/pre&gt;\r\n\r\n&lt;p&gt;&amp;nbsp;&lt;/p&gt;\r\n\r\n&lt;p&gt;&lt;strong&gt;4. Constructing&amp;nbsp;the SQL Query for pagination&lt;/strong&gt;&lt;/p&gt;\r\n\r\n&lt;pre&gt;\r\n&lt;code&gt;\r\n$sql = &quot;SELECT * FROM table LIMIT $offset, $no_of_records_per_page&quot;; &lt;/code&gt;&lt;/pre&gt;\r\n\r\n&lt;p&gt;&amp;nbsp;&lt;/p&gt;\r\n\r\n&lt;p&gt;&lt;strong&gt;5. Pagination buttons&lt;/strong&gt;&lt;/p&gt;\r\n\r\n&lt;p&gt;These Buttons are served to users as&amp;nbsp;&lt;code&gt;Next Page&lt;/code&gt;&amp;nbsp;&amp;amp;&amp;nbsp;&lt;code&gt;Previous Page&lt;/code&gt;, so that they can easily navigate through you pages. Here I am using&amp;nbsp;&lt;a href=&quot;https://www.w3schools.com/Bootstrap/bootstrap_pagination.asp&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;bootstrap&amp;rsquo;s pagination&lt;/a&gt;&amp;nbsp;button, you can use your own buttons if you want.&lt;/p&gt;\r\n\r\n&lt;pre&gt;\r\n&lt;code&gt;\r\n&amp;lt;ul class=&quot;pagination&quot;&amp;gt;\r\n    &amp;lt;li&amp;gt;&amp;lt;a href=&quot;?pageno=1&quot;&amp;gt;First&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;\r\n    &amp;lt;li class=&quot;&amp;lt;?php if($pageno &amp;lt;= 1){ echo \'disabled\'; } ?&amp;gt;&quot;&amp;gt;\r\n        &amp;lt;a href=&quot;&amp;lt;?php if($pageno &amp;lt;= 1){ echo \'#\'; } else { echo &quot;?pageno=&quot;.($pageno - 1); } ?&amp;gt;&quot;&amp;gt;Prev&amp;lt;/a&amp;gt;\r\n    &amp;lt;/li&amp;gt;\r\n    &amp;lt;li class=&quot;&amp;lt;?php if($pageno &amp;gt;= $total_pages){ echo \'disabled\'; } ?&amp;gt;&quot;&amp;gt;\r\n        &amp;lt;a href=&quot;&amp;lt;?php if($pageno &amp;gt;= $total_pages){ echo \'#\'; } else { echo &quot;?pageno=&quot;.($pageno + 1); } ?&amp;gt;&quot;&amp;gt;Next&amp;lt;/a&amp;gt;\r\n    &amp;lt;/li&amp;gt;\r\n    &amp;lt;li&amp;gt;&amp;lt;a href=&quot;?pageno=&amp;lt;?php echo $total_pages; ?&amp;gt;&quot;&amp;gt;Last&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;\r\n&amp;lt;/ul&amp;gt;\r\n&lt;/code&gt;&lt;/pre&gt;\r\n\r\n&lt;p&gt;&amp;nbsp;&lt;/p&gt;\r\n\r\n&lt;p&gt;&lt;strong&gt;6. Let&amp;rsquo;s assemble all the codes in one page&lt;/strong&gt;&lt;/p&gt;\r\n\r\n&lt;pre&gt;\r\n&lt;code&gt;\r\n&amp;lt;html&amp;gt;\r\n&amp;lt;head&amp;gt;\r\n    &amp;lt;title&amp;gt;Pagination&amp;lt;/title&amp;gt;\r\n    &amp;lt;!-- Bootstrap CDN --&amp;gt;\r\n    &amp;lt;link rel=&quot;stylesheet&quot; href=&quot;https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css&quot;&amp;gt;\r\n    &amp;lt;script src=&quot;https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;\r\n    &amp;lt;script src=&quot;https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;\r\n&amp;lt;/head&amp;gt;\r\n&amp;lt;body&amp;gt;\r\n    &amp;lt;?php\r\n\r\n        if (isset($_GET[\'pageno\'])) {\r\n            $pageno = $_GET[\'pageno\'];\r\n        } else {\r\n            $pageno = 1;\r\n        }\r\n        $no_of_records_per_page = 10;\r\n        $offset = ($pageno-1) * $no_of_records_per_page;\r\n\r\n        $conn=mysqli_connect(&quot;localhost&quot;,&quot;my_user&quot;,&quot;my_password&quot;,&quot;my_db&quot;);\r\n        // Check connection\r\n        if (mysqli_connect_errno()){\r\n            echo &quot;Failed to connect to MySQL: &quot; . mysqli_connect_error();\r\n            die();\r\n        }\r\n\r\n        $total_pages_sql = &quot;SELECT COUNT(*) FROM table&quot;;\r\n        $result = mysqli_query($conn,$total_pages_sql);\r\n        $total_rows = mysqli_fetch_array($result)[0];\r\n        $total_pages = ceil($total_rows / $no_of_records_per_page);\r\n\r\n        $sql = &quot;SELECT * FROM table LIMIT $offset, $no_of_records_per_page&quot;;\r\n        $res_data = mysqli_query($conn,$sql);\r\n        while($row = mysqli_fetch_array($res_data)){\r\n            //here goes the data\r\n        }\r\n        mysqli_close($conn);\r\n    ?&amp;gt;\r\n    &amp;lt;ul class=&quot;pagination&quot;&amp;gt;\r\n        &amp;lt;li&amp;gt;&amp;lt;a href=&quot;?pageno=1&quot;&amp;gt;First&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;\r\n        &amp;lt;li class=&quot;&amp;lt;?php if($pageno &amp;lt;= 1){ echo \'disabled\'; } ?&amp;gt;&quot;&amp;gt;\r\n            &amp;lt;a href=&quot;&amp;lt;?php if($pageno &amp;lt;= 1){ echo \'#\'; } else { echo &quot;?pageno=&quot;.($pageno - 1); } ?&amp;gt;&quot;&amp;gt;Prev&amp;lt;/a&amp;gt;\r\n        &amp;lt;/li&amp;gt;\r\n        &amp;lt;li class=&quot;&amp;lt;?php if($pageno &amp;gt;= $total_pages){ echo \'disabled\'; } ?&amp;gt;&quot;&amp;gt;\r\n            &amp;lt;a href=&quot;&amp;lt;?php if($pageno &amp;gt;= $total_pages){ echo \'#\'; } else { echo &quot;?pageno=&quot;.($pageno + 1); } ?&amp;gt;&quot;&amp;gt;Next&amp;lt;/a&amp;gt;\r\n        &amp;lt;/li&amp;gt;\r\n        &amp;lt;li&amp;gt;&amp;lt;a href=&quot;?pageno=&amp;lt;?php echo $total_pages; ?&amp;gt;&quot;&amp;gt;Last&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;\r\n    &amp;lt;/ul&amp;gt;\r\n&amp;lt;/body&amp;gt;\r\n&amp;lt;/html&amp;gt;\r\n&lt;/code&gt;&lt;/pre&gt;\r\n\r\n&lt;p&gt;That&amp;rsquo;s all!&lt;/p&gt;\r\n\r\n&lt;p&gt;If you find this article helpful, don&amp;rsquo;t forget to share it with your friends. And stay updated with us by subscribing our blog&lt;/p&gt;', '2020-05-09 00:00:00', 'php, pagination, sayfalama, sayfa numaraları yapma', 1, 243),
(234, 'Php Sayfalama', '&lt;p&gt;In this tutorial,&amp;nbsp;we are going to&amp;nbsp;&lt;strong&gt;create pagination with PHP and MySql&lt;/strong&gt;. It is probably possible that your SQL SELECT query may return results into thousand and millions of records. And it is obviously not a good idea to display all those results on a single page. So we can split this result into multiple pages.&lt;/p&gt;\r\n\r\n&lt;h2&gt;What is Pagination?&lt;/h2&gt;\r\n\r\n&lt;p&gt;Paging means displaying all your fetched results in multiple pages instead of showing them all on one page. It makes that page so long and would take so much time to load.&lt;/p&gt;\r\n\r\n&lt;h3&gt;How to&amp;nbsp;create Pagination with PHP and MySql&lt;/h3&gt;\r\n\r\n&lt;p&gt;MySQL&amp;rsquo;s&amp;nbsp;&lt;strong&gt;LIMIT&lt;/strong&gt;&amp;nbsp;clause&amp;nbsp;helps us to create a pagination feature.&amp;nbsp;It uses two arguments First argument as&amp;nbsp;&lt;code&gt;OFFSET&lt;/code&gt;&amp;nbsp;and the second argument&amp;nbsp;&lt;strong&gt;the number of records&lt;/strong&gt;&amp;nbsp;which will be returned from the database.&lt;/p&gt;\r\n\r\n&lt;p&gt;You can find ajax version for this tutorial in my other article&amp;nbsp;&lt;a href=&quot;https://www.myprogrammingtutorials.com/infinite-scroll-pagination-with-php-and-ajax.html&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;ajax pagination&lt;/a&gt;&amp;nbsp;here.&lt;/p&gt;\r\n\r\n&lt;p&gt;Follow these simple steps to&amp;nbsp;&lt;strong&gt;create pagination in PHP &amp;ndash;&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;\r\n\r\n&lt;p&gt;&lt;strong&gt;1. Get the current page number&lt;/strong&gt;&lt;/p&gt;\r\n\r\n&lt;p&gt;This code will get the current&amp;nbsp;page number with the help of&amp;nbsp;&lt;strong&gt;&lt;code&gt;$_GET&lt;/code&gt;&amp;nbsp;&lt;/strong&gt;Array&lt;strong&gt;.&lt;/strong&gt;&amp;nbsp;Note that if it is not present it will set the&amp;nbsp;default page number to 1.&lt;/p&gt;\r\n\r\n&lt;pre&gt;\r\n&lt;code&gt;\r\nif (isset($_GET[\'pageno\'])) {\r\n    $pageno = $_GET[\'pageno\'];\r\n} else {\r\n    $pageno = 1;\r\n}\r\n&lt;/code&gt;&lt;/pre&gt;\r\n\r\n&lt;p&gt;&amp;nbsp;&lt;/p&gt;\r\n\r\n&lt;p&gt;&lt;strong&gt;2. The formula for php pagination&lt;/strong&gt;&lt;/p&gt;\r\n\r\n&lt;p&gt;You can always manage the number of records to be displayed in a page by changing the value of&amp;nbsp;&lt;code&gt;$no_of_records_per_page&lt;/code&gt;&amp;nbsp;variable.&lt;/p&gt;\r\n\r\n&lt;pre&gt;\r\n&lt;code&gt;\r\n$no_of_records_per_page = 10;\r\n$offset = ($pageno-1) * $no_of_records_per_page; &lt;/code&gt;&lt;/pre&gt;\r\n\r\n&lt;p&gt;&amp;nbsp;&lt;/p&gt;\r\n\r\n&lt;p&gt;&lt;strong&gt;3. Get the number of total number of pages&lt;/strong&gt;&lt;/p&gt;\r\n\r\n&lt;pre&gt;\r\n&lt;code&gt;\r\n$total_pages_sql = &quot;SELECT COUNT(*) FROM table&quot;;\r\n$result = mysqli_query($conn,$total_pages_sql);\r\n$total_rows = mysqli_fetch_array($result)[0];\r\n$total_pages = ceil($total_rows / $no_of_records_per_page);\r\n&lt;/code&gt;&lt;/pre&gt;\r\n\r\n&lt;p&gt;&amp;nbsp;&lt;/p&gt;\r\n\r\n&lt;p&gt;&lt;strong&gt;4. Constructing&amp;nbsp;the SQL Query for pagination&lt;/strong&gt;&lt;/p&gt;\r\n\r\n&lt;pre&gt;\r\n&lt;code&gt;\r\n$sql = &quot;SELECT * FROM table LIMIT $offset, $no_of_records_per_page&quot;; &lt;/code&gt;&lt;/pre&gt;\r\n\r\n&lt;p&gt;&amp;nbsp;&lt;/p&gt;\r\n\r\n&lt;p&gt;&lt;strong&gt;5. Pagination buttons&lt;/strong&gt;&lt;/p&gt;\r\n\r\n&lt;p&gt;These Buttons are served to users as&amp;nbsp;&lt;code&gt;Next Page&lt;/code&gt;&amp;nbsp;&amp;amp;&amp;nbsp;&lt;code&gt;Previous Page&lt;/code&gt;, so that they can easily navigate through you pages. Here I am using&amp;nbsp;&lt;a href=&quot;https://www.w3schools.com/Bootstrap/bootstrap_pagination.asp&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;bootstrap&amp;rsquo;s pagination&lt;/a&gt;&amp;nbsp;button, you can use your own buttons if you want.&lt;/p&gt;\r\n\r\n&lt;pre&gt;\r\n&lt;code&gt;\r\n&amp;lt;ul class=&quot;pagination&quot;&amp;gt;\r\n    &amp;lt;li&amp;gt;&amp;lt;a href=&quot;?pageno=1&quot;&amp;gt;First&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;\r\n    &amp;lt;li class=&quot;&amp;lt;?php if($pageno &amp;lt;= 1){ echo \'disabled\'; } ?&amp;gt;&quot;&amp;gt;\r\n        &amp;lt;a href=&quot;&amp;lt;?php if($pageno &amp;lt;= 1){ echo \'#\'; } else { echo &quot;?pageno=&quot;.($pageno - 1); } ?&amp;gt;&quot;&amp;gt;Prev&amp;lt;/a&amp;gt;\r\n    &amp;lt;/li&amp;gt;\r\n    &amp;lt;li class=&quot;&amp;lt;?php if($pageno &amp;gt;= $total_pages){ echo \'disabled\'; } ?&amp;gt;&quot;&amp;gt;\r\n        &amp;lt;a href=&quot;&amp;lt;?php if($pageno &amp;gt;= $total_pages){ echo \'#\'; } else { echo &quot;?pageno=&quot;.($pageno + 1); } ?&amp;gt;&quot;&amp;gt;Next&amp;lt;/a&amp;gt;\r\n    &amp;lt;/li&amp;gt;\r\n    &amp;lt;li&amp;gt;&amp;lt;a href=&quot;?pageno=&amp;lt;?php echo $total_pages; ?&amp;gt;&quot;&amp;gt;Last&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;\r\n&amp;lt;/ul&amp;gt;\r\n&lt;/code&gt;&lt;/pre&gt;\r\n\r\n&lt;p&gt;&amp;nbsp;&lt;/p&gt;\r\n\r\n&lt;p&gt;&lt;strong&gt;6. Let&amp;rsquo;s assemble all the codes in one page&lt;/strong&gt;&lt;/p&gt;\r\n\r\n&lt;pre&gt;\r\n&lt;code&gt;\r\n&amp;lt;html&amp;gt;\r\n&amp;lt;head&amp;gt;\r\n    &amp;lt;title&amp;gt;Pagination&amp;lt;/title&amp;gt;\r\n    &amp;lt;!-- Bootstrap CDN --&amp;gt;\r\n    &amp;lt;link rel=&quot;stylesheet&quot; href=&quot;https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css&quot;&amp;gt;\r\n    &amp;lt;script src=&quot;https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;\r\n    &amp;lt;script src=&quot;https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;\r\n&amp;lt;/head&amp;gt;\r\n&amp;lt;body&amp;gt;\r\n    &amp;lt;?php\r\n\r\n        if (isset($_GET[\'pageno\'])) {\r\n            $pageno = $_GET[\'pageno\'];\r\n        } else {\r\n            $pageno = 1;\r\n        }\r\n        $no_of_records_per_page = 10;\r\n        $offset = ($pageno-1) * $no_of_records_per_page;\r\n\r\n        $conn=mysqli_connect(&quot;localhost&quot;,&quot;my_user&quot;,&quot;my_password&quot;,&quot;my_db&quot;);\r\n        // Check connection\r\n        if (mysqli_connect_errno()){\r\n            echo &quot;Failed to connect to MySQL: &quot; . mysqli_connect_error();\r\n            die();\r\n        }\r\n\r\n        $total_pages_sql = &quot;SELECT COUNT(*) FROM table&quot;;\r\n        $result = mysqli_query($conn,$total_pages_sql);\r\n        $total_rows = mysqli_fetch_array($result)[0];\r\n        $total_pages = ceil($total_rows / $no_of_records_per_page);\r\n\r\n        $sql = &quot;SELECT * FROM table LIMIT $offset, $no_of_records_per_page&quot;;\r\n        $res_data = mysqli_query($conn,$sql);\r\n        while($row = mysqli_fetch_array($res_data)){\r\n            //here goes the data\r\n        }\r\n        mysqli_close($conn);\r\n    ?&amp;gt;\r\n    &amp;lt;ul class=&quot;pagination&quot;&amp;gt;\r\n        &amp;lt;li&amp;gt;&amp;lt;a href=&quot;?pageno=1&quot;&amp;gt;First&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;\r\n        &amp;lt;li class=&quot;&amp;lt;?php if($pageno &amp;lt;= 1){ echo \'disabled\'; } ?&amp;gt;&quot;&amp;gt;\r\n            &amp;lt;a href=&quot;&amp;lt;?php if($pageno &amp;lt;= 1){ echo \'#\'; } else { echo &quot;?pageno=&quot;.($pageno - 1); } ?&amp;gt;&quot;&amp;gt;Prev&amp;lt;/a&amp;gt;\r\n        &amp;lt;/li&amp;gt;\r\n        &amp;lt;li class=&quot;&amp;lt;?php if($pageno &amp;gt;= $total_pages){ echo \'disabled\'; } ?&amp;gt;&quot;&amp;gt;\r\n            &amp;lt;a href=&quot;&amp;lt;?php if($pageno &amp;gt;= $total_pages){ echo \'#\'; } else { echo &quot;?pageno=&quot;.($pageno + 1); } ?&amp;gt;&quot;&amp;gt;Next&amp;lt;/a&amp;gt;\r\n        &amp;lt;/li&amp;gt;\r\n        &amp;lt;li&amp;gt;&amp;lt;a href=&quot;?pageno=&amp;lt;?php echo $total_pages; ?&amp;gt;&quot;&amp;gt;Last&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;\r\n    &amp;lt;/ul&amp;gt;\r\n&amp;lt;/body&amp;gt;\r\n&amp;lt;/html&amp;gt;\r\n&lt;/code&gt;&lt;/pre&gt;\r\n\r\n&lt;p&gt;That&amp;rsquo;s all!&lt;/p&gt;\r\n\r\n&lt;p&gt;If you find this article helpful, don&amp;rsquo;t forget to share it with your friends. And stay updated with us by subscribing our blog&lt;/p&gt;', '2020-05-09 00:00:00', 'php, pagination, sayfalama, sayfa numaraları yapma', 1, 243),
(235, 'Php Sayfalama', '&lt;p&gt;In this tutorial,&amp;nbsp;we are going to&amp;nbsp;&lt;strong&gt;create pagination with PHP and MySql&lt;/strong&gt;. It is probably possible that your SQL SELECT query may return results into thousand and millions of records. And it is obviously not a good idea to display all those results on a single page. So we can split this result into multiple pages.&lt;/p&gt;\r\n\r\n&lt;h2&gt;What is Pagination?&lt;/h2&gt;\r\n\r\n&lt;p&gt;Paging means displaying all your fetched results in multiple pages instead of showing them all on one page. It makes that page so long and would take so much time to load.&lt;/p&gt;\r\n\r\n&lt;h3&gt;How to&amp;nbsp;create Pagination with PHP and MySql&lt;/h3&gt;\r\n\r\n&lt;p&gt;MySQL&amp;rsquo;s&amp;nbsp;&lt;strong&gt;LIMIT&lt;/strong&gt;&amp;nbsp;clause&amp;nbsp;helps us to create a pagination feature.&amp;nbsp;It uses two arguments First argument as&amp;nbsp;&lt;code&gt;OFFSET&lt;/code&gt;&amp;nbsp;and the second argument&amp;nbsp;&lt;strong&gt;the number of records&lt;/strong&gt;&amp;nbsp;which will be returned from the database.&lt;/p&gt;\r\n\r\n&lt;p&gt;You can find ajax version for this tutorial in my other article&amp;nbsp;&lt;a href=&quot;https://www.myprogrammingtutorials.com/infinite-scroll-pagination-with-php-and-ajax.html&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;ajax pagination&lt;/a&gt;&amp;nbsp;here.&lt;/p&gt;\r\n\r\n&lt;p&gt;Follow these simple steps to&amp;nbsp;&lt;strong&gt;create pagination in PHP &amp;ndash;&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;\r\n\r\n&lt;p&gt;&lt;strong&gt;1. Get the current page number&lt;/strong&gt;&lt;/p&gt;\r\n\r\n&lt;p&gt;This code will get the current&amp;nbsp;page number with the help of&amp;nbsp;&lt;strong&gt;&lt;code&gt;$_GET&lt;/code&gt;&amp;nbsp;&lt;/strong&gt;Array&lt;strong&gt;.&lt;/strong&gt;&amp;nbsp;Note that if it is not present it will set the&amp;nbsp;default page number to 1.&lt;/p&gt;\r\n\r\n&lt;pre&gt;\r\n&lt;code&gt;\r\nif (isset($_GET[\'pageno\'])) {\r\n    $pageno = $_GET[\'pageno\'];\r\n} else {\r\n    $pageno = 1;\r\n}\r\n&lt;/code&gt;&lt;/pre&gt;\r\n\r\n&lt;p&gt;&amp;nbsp;&lt;/p&gt;\r\n\r\n&lt;p&gt;&lt;strong&gt;2. The formula for php pagination&lt;/strong&gt;&lt;/p&gt;\r\n\r\n&lt;p&gt;You can always manage the number of records to be displayed in a page by changing the value of&amp;nbsp;&lt;code&gt;$no_of_records_per_page&lt;/code&gt;&amp;nbsp;variable.&lt;/p&gt;\r\n\r\n&lt;pre&gt;\r\n&lt;code&gt;\r\n$no_of_records_per_page = 10;\r\n$offset = ($pageno-1) * $no_of_records_per_page; &lt;/code&gt;&lt;/pre&gt;\r\n\r\n&lt;p&gt;&amp;nbsp;&lt;/p&gt;\r\n\r\n&lt;p&gt;&lt;strong&gt;3. Get the number of total number of pages&lt;/strong&gt;&lt;/p&gt;\r\n\r\n&lt;pre&gt;\r\n&lt;code&gt;\r\n$total_pages_sql = &quot;SELECT COUNT(*) FROM table&quot;;\r\n$result = mysqli_query($conn,$total_pages_sql);\r\n$total_rows = mysqli_fetch_array($result)[0];\r\n$total_pages = ceil($total_rows / $no_of_records_per_page);\r\n&lt;/code&gt;&lt;/pre&gt;\r\n\r\n&lt;p&gt;&amp;nbsp;&lt;/p&gt;\r\n\r\n&lt;p&gt;&lt;strong&gt;4. Constructing&amp;nbsp;the SQL Query for pagination&lt;/strong&gt;&lt;/p&gt;\r\n\r\n&lt;pre&gt;\r\n&lt;code&gt;\r\n$sql = &quot;SELECT * FROM table LIMIT $offset, $no_of_records_per_page&quot;; &lt;/code&gt;&lt;/pre&gt;\r\n\r\n&lt;p&gt;&amp;nbsp;&lt;/p&gt;\r\n\r\n&lt;p&gt;&lt;strong&gt;5. Pagination buttons&lt;/strong&gt;&lt;/p&gt;\r\n\r\n&lt;p&gt;These Buttons are served to users as&amp;nbsp;&lt;code&gt;Next Page&lt;/code&gt;&amp;nbsp;&amp;amp;&amp;nbsp;&lt;code&gt;Previous Page&lt;/code&gt;, so that they can easily navigate through you pages. Here I am using&amp;nbsp;&lt;a href=&quot;https://www.w3schools.com/Bootstrap/bootstrap_pagination.asp&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;bootstrap&amp;rsquo;s pagination&lt;/a&gt;&amp;nbsp;button, you can use your own buttons if you want.&lt;/p&gt;\r\n\r\n&lt;pre&gt;\r\n&lt;code&gt;\r\n&amp;lt;ul class=&quot;pagination&quot;&amp;gt;\r\n    &amp;lt;li&amp;gt;&amp;lt;a href=&quot;?pageno=1&quot;&amp;gt;First&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;\r\n    &amp;lt;li class=&quot;&amp;lt;?php if($pageno &amp;lt;= 1){ echo \'disabled\'; } ?&amp;gt;&quot;&amp;gt;\r\n        &amp;lt;a href=&quot;&amp;lt;?php if($pageno &amp;lt;= 1){ echo \'#\'; } else { echo &quot;?pageno=&quot;.($pageno - 1); } ?&amp;gt;&quot;&amp;gt;Prev&amp;lt;/a&amp;gt;\r\n    &amp;lt;/li&amp;gt;\r\n    &amp;lt;li class=&quot;&amp;lt;?php if($pageno &amp;gt;= $total_pages){ echo \'disabled\'; } ?&amp;gt;&quot;&amp;gt;\r\n        &amp;lt;a href=&quot;&amp;lt;?php if($pageno &amp;gt;= $total_pages){ echo \'#\'; } else { echo &quot;?pageno=&quot;.($pageno + 1); } ?&amp;gt;&quot;&amp;gt;Next&amp;lt;/a&amp;gt;\r\n    &amp;lt;/li&amp;gt;\r\n    &amp;lt;li&amp;gt;&amp;lt;a href=&quot;?pageno=&amp;lt;?php echo $total_pages; ?&amp;gt;&quot;&amp;gt;Last&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;\r\n&amp;lt;/ul&amp;gt;\r\n&lt;/code&gt;&lt;/pre&gt;\r\n\r\n&lt;p&gt;&amp;nbsp;&lt;/p&gt;\r\n\r\n&lt;p&gt;&lt;strong&gt;6. Let&amp;rsquo;s assemble all the codes in one page&lt;/strong&gt;&lt;/p&gt;\r\n\r\n&lt;pre&gt;\r\n&lt;code&gt;\r\n&amp;lt;html&amp;gt;\r\n&amp;lt;head&amp;gt;\r\n    &amp;lt;title&amp;gt;Pagination&amp;lt;/title&amp;gt;\r\n    &amp;lt;!-- Bootstrap CDN --&amp;gt;\r\n    &amp;lt;link rel=&quot;stylesheet&quot; href=&quot;https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css&quot;&amp;gt;\r\n    &amp;lt;script src=&quot;https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;\r\n    &amp;lt;script src=&quot;https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;\r\n&amp;lt;/head&amp;gt;\r\n&amp;lt;body&amp;gt;\r\n    &amp;lt;?php\r\n\r\n        if (isset($_GET[\'pageno\'])) {\r\n            $pageno = $_GET[\'pageno\'];\r\n        } else {\r\n            $pageno = 1;\r\n        }\r\n        $no_of_records_per_page = 10;\r\n        $offset = ($pageno-1) * $no_of_records_per_page;\r\n\r\n        $conn=mysqli_connect(&quot;localhost&quot;,&quot;my_user&quot;,&quot;my_password&quot;,&quot;my_db&quot;);\r\n        // Check connection\r\n        if (mysqli_connect_errno()){\r\n            echo &quot;Failed to connect to MySQL: &quot; . mysqli_connect_error();\r\n            die();\r\n        }\r\n\r\n        $total_pages_sql = &quot;SELECT COUNT(*) FROM table&quot;;\r\n        $result = mysqli_query($conn,$total_pages_sql);\r\n        $total_rows = mysqli_fetch_array($result)[0];\r\n        $total_pages = ceil($total_rows / $no_of_records_per_page);\r\n\r\n        $sql = &quot;SELECT * FROM table LIMIT $offset, $no_of_records_per_page&quot;;\r\n        $res_data = mysqli_query($conn,$sql);\r\n        while($row = mysqli_fetch_array($res_data)){\r\n            //here goes the data\r\n        }\r\n        mysqli_close($conn);\r\n    ?&amp;gt;\r\n    &amp;lt;ul class=&quot;pagination&quot;&amp;gt;\r\n        &amp;lt;li&amp;gt;&amp;lt;a href=&quot;?pageno=1&quot;&amp;gt;First&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;\r\n        &amp;lt;li class=&quot;&amp;lt;?php if($pageno &amp;lt;= 1){ echo \'disabled\'; } ?&amp;gt;&quot;&amp;gt;\r\n            &amp;lt;a href=&quot;&amp;lt;?php if($pageno &amp;lt;= 1){ echo \'#\'; } else { echo &quot;?pageno=&quot;.($pageno - 1); } ?&amp;gt;&quot;&amp;gt;Prev&amp;lt;/a&amp;gt;\r\n        &amp;lt;/li&amp;gt;\r\n        &amp;lt;li class=&quot;&amp;lt;?php if($pageno &amp;gt;= $total_pages){ echo \'disabled\'; } ?&amp;gt;&quot;&amp;gt;\r\n            &amp;lt;a href=&quot;&amp;lt;?php if($pageno &amp;gt;= $total_pages){ echo \'#\'; } else { echo &quot;?pageno=&quot;.($pageno + 1); } ?&amp;gt;&quot;&amp;gt;Next&amp;lt;/a&amp;gt;\r\n        &amp;lt;/li&amp;gt;\r\n        &amp;lt;li&amp;gt;&amp;lt;a href=&quot;?pageno=&amp;lt;?php echo $total_pages; ?&amp;gt;&quot;&amp;gt;Last&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;\r\n    &amp;lt;/ul&amp;gt;\r\n&amp;lt;/body&amp;gt;\r\n&amp;lt;/html&amp;gt;\r\n&lt;/code&gt;&lt;/pre&gt;\r\n\r\n&lt;p&gt;That&amp;rsquo;s all!&lt;/p&gt;\r\n\r\n&lt;p&gt;If you find this article helpful, don&amp;rsquo;t forget to share it with your friends. And stay updated with us by subscribing our blog&lt;/p&gt;', '2020-05-09 00:00:00', 'php, pagination, sayfalama, sayfa numaraları yapma', 1, 243);
INSERT INTO `blog_content` (`id`, `title`, `text`, `tarih`, `labels`, `visibility`, `category_id`) VALUES
(236, 'Php Sayfalama', '&lt;p&gt;In this tutorial,&amp;nbsp;we are going to&amp;nbsp;&lt;strong&gt;create pagination with PHP and MySql&lt;/strong&gt;. It is probably possible that your SQL SELECT query may return results into thousand and millions of records. And it is obviously not a good idea to display all those results on a single page. So we can split this result into multiple pages.&lt;/p&gt;\r\n\r\n&lt;h2&gt;What is Pagination?&lt;/h2&gt;\r\n\r\n&lt;p&gt;Paging means displaying all your fetched results in multiple pages instead of showing them all on one page. It makes that page so long and would take so much time to load.&lt;/p&gt;\r\n\r\n&lt;h3&gt;How to&amp;nbsp;create Pagination with PHP and MySql&lt;/h3&gt;\r\n\r\n&lt;p&gt;MySQL&amp;rsquo;s&amp;nbsp;&lt;strong&gt;LIMIT&lt;/strong&gt;&amp;nbsp;clause&amp;nbsp;helps us to create a pagination feature.&amp;nbsp;It uses two arguments First argument as&amp;nbsp;&lt;code&gt;OFFSET&lt;/code&gt;&amp;nbsp;and the second argument&amp;nbsp;&lt;strong&gt;the number of records&lt;/strong&gt;&amp;nbsp;which will be returned from the database.&lt;/p&gt;\r\n\r\n&lt;p&gt;You can find ajax version for this tutorial in my other article&amp;nbsp;&lt;a href=&quot;https://www.myprogrammingtutorials.com/infinite-scroll-pagination-with-php-and-ajax.html&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;ajax pagination&lt;/a&gt;&amp;nbsp;here.&lt;/p&gt;\r\n\r\n&lt;p&gt;Follow these simple steps to&amp;nbsp;&lt;strong&gt;create pagination in PHP &amp;ndash;&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;\r\n\r\n&lt;p&gt;&lt;strong&gt;1. Get the current page number&lt;/strong&gt;&lt;/p&gt;\r\n\r\n&lt;p&gt;This code will get the current&amp;nbsp;page number with the help of&amp;nbsp;&lt;strong&gt;&lt;code&gt;$_GET&lt;/code&gt;&amp;nbsp;&lt;/strong&gt;Array&lt;strong&gt;.&lt;/strong&gt;&amp;nbsp;Note that if it is not present it will set the&amp;nbsp;default page number to 1.&lt;/p&gt;\r\n\r\n&lt;pre&gt;\r\n&lt;code&gt;\r\nif (isset($_GET[\'pageno\'])) {\r\n    $pageno = $_GET[\'pageno\'];\r\n} else {\r\n    $pageno = 1;\r\n}\r\n&lt;/code&gt;&lt;/pre&gt;\r\n\r\n&lt;p&gt;&amp;nbsp;&lt;/p&gt;\r\n\r\n&lt;p&gt;&lt;strong&gt;2. The formula for php pagination&lt;/strong&gt;&lt;/p&gt;\r\n\r\n&lt;p&gt;You can always manage the number of records to be displayed in a page by changing the value of&amp;nbsp;&lt;code&gt;$no_of_records_per_page&lt;/code&gt;&amp;nbsp;variable.&lt;/p&gt;\r\n\r\n&lt;pre&gt;\r\n&lt;code&gt;\r\n$no_of_records_per_page = 10;\r\n$offset = ($pageno-1) * $no_of_records_per_page; &lt;/code&gt;&lt;/pre&gt;\r\n\r\n&lt;p&gt;&amp;nbsp;&lt;/p&gt;\r\n\r\n&lt;p&gt;&lt;strong&gt;3. Get the number of total number of pages&lt;/strong&gt;&lt;/p&gt;\r\n\r\n&lt;pre&gt;\r\n&lt;code&gt;\r\n$total_pages_sql = &quot;SELECT COUNT(*) FROM table&quot;;\r\n$result = mysqli_query($conn,$total_pages_sql);\r\n$total_rows = mysqli_fetch_array($result)[0];\r\n$total_pages = ceil($total_rows / $no_of_records_per_page);\r\n&lt;/code&gt;&lt;/pre&gt;\r\n\r\n&lt;p&gt;&amp;nbsp;&lt;/p&gt;\r\n\r\n&lt;p&gt;&lt;strong&gt;4. Constructing&amp;nbsp;the SQL Query for pagination&lt;/strong&gt;&lt;/p&gt;\r\n\r\n&lt;pre&gt;\r\n&lt;code&gt;\r\n$sql = &quot;SELECT * FROM table LIMIT $offset, $no_of_records_per_page&quot;; &lt;/code&gt;&lt;/pre&gt;\r\n\r\n&lt;p&gt;&amp;nbsp;&lt;/p&gt;\r\n\r\n&lt;p&gt;&lt;strong&gt;5. Pagination buttons&lt;/strong&gt;&lt;/p&gt;\r\n\r\n&lt;p&gt;These Buttons are served to users as&amp;nbsp;&lt;code&gt;Next Page&lt;/code&gt;&amp;nbsp;&amp;amp;&amp;nbsp;&lt;code&gt;Previous Page&lt;/code&gt;, so that they can easily navigate through you pages. Here I am using&amp;nbsp;&lt;a href=&quot;https://www.w3schools.com/Bootstrap/bootstrap_pagination.asp&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;bootstrap&amp;rsquo;s pagination&lt;/a&gt;&amp;nbsp;button, you can use your own buttons if you want.&lt;/p&gt;\r\n\r\n&lt;pre&gt;\r\n&lt;code&gt;\r\n&amp;lt;ul class=&quot;pagination&quot;&amp;gt;\r\n    &amp;lt;li&amp;gt;&amp;lt;a href=&quot;?pageno=1&quot;&amp;gt;First&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;\r\n    &amp;lt;li class=&quot;&amp;lt;?php if($pageno &amp;lt;= 1){ echo \'disabled\'; } ?&amp;gt;&quot;&amp;gt;\r\n        &amp;lt;a href=&quot;&amp;lt;?php if($pageno &amp;lt;= 1){ echo \'#\'; } else { echo &quot;?pageno=&quot;.($pageno - 1); } ?&amp;gt;&quot;&amp;gt;Prev&amp;lt;/a&amp;gt;\r\n    &amp;lt;/li&amp;gt;\r\n    &amp;lt;li class=&quot;&amp;lt;?php if($pageno &amp;gt;= $total_pages){ echo \'disabled\'; } ?&amp;gt;&quot;&amp;gt;\r\n        &amp;lt;a href=&quot;&amp;lt;?php if($pageno &amp;gt;= $total_pages){ echo \'#\'; } else { echo &quot;?pageno=&quot;.($pageno + 1); } ?&amp;gt;&quot;&amp;gt;Next&amp;lt;/a&amp;gt;\r\n    &amp;lt;/li&amp;gt;\r\n    &amp;lt;li&amp;gt;&amp;lt;a href=&quot;?pageno=&amp;lt;?php echo $total_pages; ?&amp;gt;&quot;&amp;gt;Last&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;\r\n&amp;lt;/ul&amp;gt;\r\n&lt;/code&gt;&lt;/pre&gt;\r\n\r\n&lt;p&gt;&amp;nbsp;&lt;/p&gt;\r\n\r\n&lt;p&gt;&lt;strong&gt;6. Let&amp;rsquo;s assemble all the codes in one page&lt;/strong&gt;&lt;/p&gt;\r\n\r\n&lt;pre&gt;\r\n&lt;code&gt;\r\n&amp;lt;html&amp;gt;\r\n&amp;lt;head&amp;gt;\r\n    &amp;lt;title&amp;gt;Pagination&amp;lt;/title&amp;gt;\r\n    &amp;lt;!-- Bootstrap CDN --&amp;gt;\r\n    &amp;lt;link rel=&quot;stylesheet&quot; href=&quot;https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css&quot;&amp;gt;\r\n    &amp;lt;script src=&quot;https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;\r\n    &amp;lt;script src=&quot;https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;\r\n&amp;lt;/head&amp;gt;\r\n&amp;lt;body&amp;gt;\r\n    &amp;lt;?php\r\n\r\n        if (isset($_GET[\'pageno\'])) {\r\n            $pageno = $_GET[\'pageno\'];\r\n        } else {\r\n            $pageno = 1;\r\n        }\r\n        $no_of_records_per_page = 10;\r\n        $offset = ($pageno-1) * $no_of_records_per_page;\r\n\r\n        $conn=mysqli_connect(&quot;localhost&quot;,&quot;my_user&quot;,&quot;my_password&quot;,&quot;my_db&quot;);\r\n        // Check connection\r\n        if (mysqli_connect_errno()){\r\n            echo &quot;Failed to connect to MySQL: &quot; . mysqli_connect_error();\r\n            die();\r\n        }\r\n\r\n        $total_pages_sql = &quot;SELECT COUNT(*) FROM table&quot;;\r\n        $result = mysqli_query($conn,$total_pages_sql);\r\n        $total_rows = mysqli_fetch_array($result)[0];\r\n        $total_pages = ceil($total_rows / $no_of_records_per_page);\r\n\r\n        $sql = &quot;SELECT * FROM table LIMIT $offset, $no_of_records_per_page&quot;;\r\n        $res_data = mysqli_query($conn,$sql);\r\n        while($row = mysqli_fetch_array($res_data)){\r\n            //here goes the data\r\n        }\r\n        mysqli_close($conn);\r\n    ?&amp;gt;\r\n    &amp;lt;ul class=&quot;pagination&quot;&amp;gt;\r\n        &amp;lt;li&amp;gt;&amp;lt;a href=&quot;?pageno=1&quot;&amp;gt;First&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;\r\n        &amp;lt;li class=&quot;&amp;lt;?php if($pageno &amp;lt;= 1){ echo \'disabled\'; } ?&amp;gt;&quot;&amp;gt;\r\n            &amp;lt;a href=&quot;&amp;lt;?php if($pageno &amp;lt;= 1){ echo \'#\'; } else { echo &quot;?pageno=&quot;.($pageno - 1); } ?&amp;gt;&quot;&amp;gt;Prev&amp;lt;/a&amp;gt;\r\n        &amp;lt;/li&amp;gt;\r\n        &amp;lt;li class=&quot;&amp;lt;?php if($pageno &amp;gt;= $total_pages){ echo \'disabled\'; } ?&amp;gt;&quot;&amp;gt;\r\n            &amp;lt;a href=&quot;&amp;lt;?php if($pageno &amp;gt;= $total_pages){ echo \'#\'; } else { echo &quot;?pageno=&quot;.($pageno + 1); } ?&amp;gt;&quot;&amp;gt;Next&amp;lt;/a&amp;gt;\r\n        &amp;lt;/li&amp;gt;\r\n        &amp;lt;li&amp;gt;&amp;lt;a href=&quot;?pageno=&amp;lt;?php echo $total_pages; ?&amp;gt;&quot;&amp;gt;Last&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;\r\n    &amp;lt;/ul&amp;gt;\r\n&amp;lt;/body&amp;gt;\r\n&amp;lt;/html&amp;gt;\r\n&lt;/code&gt;&lt;/pre&gt;\r\n\r\n&lt;p&gt;That&amp;rsquo;s all!&lt;/p&gt;\r\n\r\n&lt;p&gt;If you find this article helpful, don&amp;rsquo;t forget to share it with your friends. And stay updated with us by subscribing our blog&lt;/p&gt;', '2020-05-09 00:00:00', 'php, pagination, sayfalama, sayfa numaraları yapma', 1, 243),
(278, 'Jquery\'nin Gücü', '&lt;h1&gt;The Power of jQuery with Ajax&lt;/h1&gt;\r\n\r\n&lt;p&gt;&lt;a href=&quot;https://www.webfx.com/blog/web-design/the-power-of-jquery-with-ajax/&quot;&gt;&lt;img alt=&quot;The Power of jQuery with Ajax&quot; src=&quot;https://www.webfx.com/blog/images/assets/images.sixrevisions.com/2010/06/23-01_jquery_ajax_ld_img.jpg&quot; style=&quot;height:200px; width:550px&quot; /&gt;&lt;/a&gt;&lt;/p&gt;\r\n\r\n&lt;p&gt;As the web evolves, new technologies are emerging and uniting in remarkable ways. The combination of Ajax and jQuery, in particular, is one of the most powerful unions to date.&lt;/p&gt;\r\n\r\n&lt;p&gt;The purpose of this article is to give a brief and generalized overview of both Ajax and jQuery, and also discuss how jQuery has made Ajax development easier than ever before.&lt;/p&gt;\r\n\r\n&lt;h3&gt;What is Ajax?&lt;/h3&gt;\r\n\r\n&lt;p&gt;Since its conception in 2005&lt;sup&gt;[&lt;a href=&quot;https://www.webfx.com/blog/web-design/the-power-of-jquery-with-ajax/#reference-01&quot;&gt;1&lt;/a&gt;]&lt;/sup&gt;, Ajax (Asynchronous JavaScript and XML) has changed the web as we know it today. It&amp;rsquo;s helped websites evolve into Rich Internet Applications (RIAs) by allowing web pages to make direct requests to web servers without reloading the page. This capability is vital in replicating the rich user experiences achieved in client applications.&lt;/p&gt;\r\n\r\n&lt;h4&gt;Ajax in Practice&lt;/h4&gt;\r\n\r\n&lt;p&gt;Let&amp;rsquo;s say that you have a login form for your web application. To ensure that the provided login name and password entered by the user is a match without using Ajax, your web application would have to load a whole new web page that shows an account screen if the login was successful, or show an error screen if the login failed. This is the old way of handling logins.&lt;/p&gt;\r\n\r\n&lt;p&gt;A&amp;nbsp;&lt;strong&gt;more savvy approach&lt;/strong&gt;&amp;nbsp;to this problem would be to check if the login and password is correct using Ajax.&lt;/p&gt;\r\n\r\n&lt;p&gt;Here&amp;rsquo;s how Ajax would work in this instance: Once the user has typed in a login name and password and submitted the login web form, you could have a JavaScript function that invokes an Ajax call that sends two parameters &amp;mdash; the login name and password.&lt;/p&gt;\r\n\r\n&lt;p&gt;The web server (usually through a server-side script/language such as PHP) takes the two parameters and then queries your user database to see if there is a match.&lt;/p&gt;\r\n\r\n&lt;p&gt;If there is a match found in your database, then the web server can return a success flag. Otherwise, the web server could return an error message.&lt;/p&gt;\r\n\r\n&lt;p&gt;Next, you would then have a JavaScript function that accepts the Ajax response. If the response is successful, it could use&amp;nbsp;&lt;code&gt;window.location&lt;/code&gt;&amp;nbsp;to send the user to their account screen.&lt;/p&gt;\r\n\r\n&lt;p&gt;If the response contains an error message, the application can display the error on the screen without ever reloading the page.&lt;/p&gt;\r\n\r\n&lt;p&gt;The main thing to take away from this is that you don&amp;rsquo;t have to reload an entire page just to handle username/password verification, making your web application more responsive and, if the page is heavy, saving you some significant bandwidth.&lt;/p&gt;\r\n\r\n&lt;h3&gt;What is jQuery?&lt;/h3&gt;\r\n\r\n&lt;p&gt;Released in January of 2006&lt;sup&gt;[&lt;a href=&quot;https://www.webfx.com/blog/web-design/the-power-of-jquery-with-ajax/#reference-02&quot;&gt;2&lt;/a&gt;]&lt;/sup&gt;,&amp;nbsp;&lt;a href=&quot;https://www.webfx.com/blog/web-design/getting-started-with-jquery/&quot; title=&quot;Getting Started with jQuery - sixrevisions.com&quot;&gt;jQuery&lt;/a&gt;&amp;nbsp;is a cross-browser JavaScript library designed to simplify the client-side script of HTML.&lt;/p&gt;\r\n\r\n&lt;p&gt;Used by close to a million websites&lt;sup&gt;[&lt;a href=&quot;https://www.webfx.com/blog/web-design/the-power-of-jquery-with-ajax/#reference-03&quot;&gt;3&lt;/a&gt;]&lt;/sup&gt;, jQuery is the most popular JavaScript library in use to date.&lt;/p&gt;\r\n\r\n&lt;p&gt;jQuery makes it easy to handle DOM objects, events, effects and Ajax, automatically takes care of JavaScript leaks, and has countless third-party plugins.&lt;/p&gt;\r\n\r\n&lt;h3&gt;The Problem with Ajax&lt;/h3&gt;\r\n\r\n&lt;p&gt;Despite its revolutionary impact on the web, Ajax can be difficult to use even for veteran developers.&lt;/p&gt;\r\n\r\n&lt;p&gt;People will usually create their own custom functions to handle Ajax calls so that the functionality can be reused across a web application. This can become very tedious when a web application makes use of different types of Ajax calls &amp;mdash; such as the ability to handle both synchronous and asynchronous calls &amp;mdash; or the ability to handle different response formats such as string messages, HTML, CSV, XML, JSON, etc.&lt;/p&gt;\r\n\r\n&lt;p&gt;As a professional web developer, I&amp;rsquo;ve personally spent countless hours building custom methods to handle Ajax calls.&lt;/p&gt;\r\n\r\n&lt;p&gt;Traditional Ajax calls usually take on the following form:&lt;/p&gt;\r\n\r\n&lt;pre&gt;\r\nfunction httpRequest(id) {\r\n  if (window.XMLHttpRequest) { // code for IE7+, FF, Chrome, Opera, Safari\r\n    http=new XMLHttpRequest();\r\n  }\r\n  else { // code for IE6, IE5\r\n    http=new ActiveXObject(&amp;quot;Microsoft.XMLHTTP&amp;rdquo;);\r\n  }\r\n  http.onreadystatechange=function() {\r\n    if (http.readyState==4 &amp;amp;&amp;amp; http.status==200) {\r\n      response = http.responseText;\r\n      // do something with response\r\n    }\r\n  }\r\n  dest=&amp;rdquo;servlet.php?id=&amp;rdquo; + id;\r\n  http.open(&amp;quot;GET&amp;rdquo;, dest);\r\n  http.send();\r\n}&lt;/pre&gt;\r\n\r\n&lt;p&gt;If your web application only uses one Ajax call, it&amp;rsquo;s not that big of a deal to implement. The problem occurs, however, when your web application leverages lots of Ajax calls and you try to break the code apart to make it reusable.&lt;/p&gt;\r\n\r\n&lt;p&gt;The idea of Ajax is to send a request to some web server, wait for a response, and update your HTML page. It would be convenient to create a custom function like&amp;nbsp;&lt;code&gt;httpRequest()&lt;/code&gt;&amp;nbsp;that takes two parameters &amp;mdash; a request URL and a response function &amp;mdash; that could be reused throughout your system.&lt;/p&gt;\r\n\r\n&lt;p&gt;Once you start setting this up, however, you&amp;rsquo;ll immediately see that the simple task of making an Ajax call suddenly becomes a nightmare when you try to construct response function evaluations using&amp;nbsp;&lt;code&gt;eval()&lt;/code&gt;&amp;nbsp;and figuring out how to make your new function handle synchronous calls, asynchronous calls, and different response formats.&lt;/p&gt;\r\n\r\n&lt;p&gt;At the end of the day, the simple idea of creating a custom&amp;nbsp;&lt;code&gt;httpRequest()&lt;/code&gt;&amp;nbsp;function quickly turns into a big project.&lt;/p&gt;\r\n\r\n&lt;p&gt;The other advantage of jQuery is that it has additional Ajax functions and methods that you can use, which can further reduce development and debugging time.&lt;/p&gt;\r\n\r\n&lt;h3&gt;Hello Ajax. Meet jQuery.&lt;/h3&gt;\r\n\r\n&lt;p&gt;Among other advantages, one of my favorite features of jQuery is its ability to leverage Ajax with very little effort. To make an Ajax call, you can do something like this:&lt;/p&gt;\r\n\r\n&lt;pre&gt;\r\n$.Ajax({\r\n  type: &amp;quot;POST&amp;quot;,\r\n  url: &amp;quot;some.php&amp;quot;,\r\n  data: &amp;quot;name=John&amp;amp;location=Boston&amp;quot;,\r\n  success: function(msg){\r\n    alert( &amp;quot;Data Saved: &amp;quot; + msg );\r\n  }\r\n});&lt;/pre&gt;\r\n\r\n&lt;p&gt;If you&amp;rsquo;ve developed Ajax applications before without jQuery, you&amp;rsquo;ll immediately see the value here. jQuery has put all of the properties of Ajax into one simple API. You can control everything including the&amp;nbsp;&lt;code&gt;url&lt;/code&gt;,&amp;nbsp;&lt;code&gt;cache&lt;/code&gt;, success function, data type, and even synchronization, all from one neat declaration. It&amp;rsquo;s nothing short of beautiful.&lt;/p&gt;\r\n\r\n&lt;h3&gt;Get Started with Ajax + jQuery&lt;/h3&gt;\r\n\r\n&lt;p&gt;If you&amp;rsquo;re not using a JavaScript Web Development framework like jQuery or MooTools yet, and you&amp;rsquo;re planning on creating responsive web applications, you should leverage these awesome libraries.&lt;/p&gt;\r\n\r\n&lt;p&gt;For jQuery, the following list highlights some tutorials you can check out.&lt;/p&gt;', '2020-05-16 00:00:00', 'jquery, javascript, jquery nedir?,jquery ile neler yapılabilir', 1, 247),
(279, 'Jquery\'nin Gücü', '&lt;h1&gt;The Power of jQuery with Ajax&lt;/h1&gt;\r\n\r\n&lt;p&gt;&lt;a href=&quot;https://www.webfx.com/blog/web-design/the-power-of-jquery-with-ajax/&quot;&gt;&lt;img alt=&quot;The Power of jQuery with Ajax&quot; src=&quot;https://www.webfx.com/blog/images/assets/images.sixrevisions.com/2010/06/23-01_jquery_ajax_ld_img.jpg&quot; style=&quot;height:200px; width:550px&quot; /&gt;&lt;/a&gt;&lt;/p&gt;\r\n\r\n&lt;p&gt;As the web evolves, new technologies are emerging and uniting in remarkable ways. The combination of Ajax and jQuery, in particular, is one of the most powerful unions to date.&lt;/p&gt;\r\n\r\n&lt;p&gt;The purpose of this article is to give a brief and generalized overview of both Ajax and jQuery, and also discuss how jQuery has made Ajax development easier than ever before.&lt;/p&gt;\r\n\r\n&lt;h3&gt;What is Ajax?&lt;/h3&gt;\r\n\r\n&lt;p&gt;Since its conception in 2005&lt;sup&gt;[&lt;a href=&quot;https://www.webfx.com/blog/web-design/the-power-of-jquery-with-ajax/#reference-01&quot;&gt;1&lt;/a&gt;]&lt;/sup&gt;, Ajax (Asynchronous JavaScript and XML) has changed the web as we know it today. It&amp;rsquo;s helped websites evolve into Rich Internet Applications (RIAs) by allowing web pages to make direct requests to web servers without reloading the page. This capability is vital in replicating the rich user experiences achieved in client applications.&lt;/p&gt;\r\n\r\n&lt;h4&gt;Ajax in Practice&lt;/h4&gt;\r\n\r\n&lt;p&gt;Let&amp;rsquo;s say that you have a login form for your web application. To ensure that the provided login name and password entered by the user is a match without using Ajax, your web application would have to load a whole new web page that shows an account screen if the login was successful, or show an error screen if the login failed. This is the old way of handling logins.&lt;/p&gt;\r\n\r\n&lt;p&gt;A&amp;nbsp;&lt;strong&gt;more savvy approach&lt;/strong&gt;&amp;nbsp;to this problem would be to check if the login and password is correct using Ajax.&lt;/p&gt;\r\n\r\n&lt;p&gt;Here&amp;rsquo;s how Ajax would work in this instance: Once the user has typed in a login name and password and submitted the login web form, you could have a JavaScript function that invokes an Ajax call that sends two parameters &amp;mdash; the login name and password.&lt;/p&gt;\r\n\r\n&lt;p&gt;The web server (usually through a server-side script/language such as PHP) takes the two parameters and then queries your user database to see if there is a match.&lt;/p&gt;\r\n\r\n&lt;p&gt;If there is a match found in your database, then the web server can return a success flag. Otherwise, the web server could return an error message.&lt;/p&gt;\r\n\r\n&lt;p&gt;Next, you would then have a JavaScript function that accepts the Ajax response. If the response is successful, it could use&amp;nbsp;&lt;code&gt;window.location&lt;/code&gt;&amp;nbsp;to send the user to their account screen.&lt;/p&gt;\r\n\r\n&lt;p&gt;If the response contains an error message, the application can display the error on the screen without ever reloading the page.&lt;/p&gt;\r\n\r\n&lt;p&gt;The main thing to take away from this is that you don&amp;rsquo;t have to reload an entire page just to handle username/password verification, making your web application more responsive and, if the page is heavy, saving you some significant bandwidth.&lt;/p&gt;\r\n\r\n&lt;h3&gt;What is jQuery?&lt;/h3&gt;\r\n\r\n&lt;p&gt;Released in January of 2006&lt;sup&gt;[&lt;a href=&quot;https://www.webfx.com/blog/web-design/the-power-of-jquery-with-ajax/#reference-02&quot;&gt;2&lt;/a&gt;]&lt;/sup&gt;,&amp;nbsp;&lt;a href=&quot;https://www.webfx.com/blog/web-design/getting-started-with-jquery/&quot; title=&quot;Getting Started with jQuery - sixrevisions.com&quot;&gt;jQuery&lt;/a&gt;&amp;nbsp;is a cross-browser JavaScript library designed to simplify the client-side script of HTML.&lt;/p&gt;\r\n\r\n&lt;p&gt;Used by close to a million websites&lt;sup&gt;[&lt;a href=&quot;https://www.webfx.com/blog/web-design/the-power-of-jquery-with-ajax/#reference-03&quot;&gt;3&lt;/a&gt;]&lt;/sup&gt;, jQuery is the most popular JavaScript library in use to date.&lt;/p&gt;\r\n\r\n&lt;p&gt;jQuery makes it easy to handle DOM objects, events, effects and Ajax, automatically takes care of JavaScript leaks, and has countless third-party plugins.&lt;/p&gt;\r\n\r\n&lt;h3&gt;The Problem with Ajax&lt;/h3&gt;\r\n\r\n&lt;p&gt;Despite its revolutionary impact on the web, Ajax can be difficult to use even for veteran developers.&lt;/p&gt;\r\n\r\n&lt;p&gt;People will usually create their own custom functions to handle Ajax calls so that the functionality can be reused across a web application. This can become very tedious when a web application makes use of different types of Ajax calls &amp;mdash; such as the ability to handle both synchronous and asynchronous calls &amp;mdash; or the ability to handle different response formats such as string messages, HTML, CSV, XML, JSON, etc.&lt;/p&gt;\r\n\r\n&lt;p&gt;As a professional web developer, I&amp;rsquo;ve personally spent countless hours building custom methods to handle Ajax calls.&lt;/p&gt;\r\n\r\n&lt;p&gt;Traditional Ajax calls usually take on the following form:&lt;/p&gt;\r\n\r\n&lt;pre&gt;\r\nfunction httpRequest(id) {\r\n  if (window.XMLHttpRequest) { // code for IE7+, FF, Chrome, Opera, Safari\r\n    http=new XMLHttpRequest();\r\n  }\r\n  else { // code for IE6, IE5\r\n    http=new ActiveXObject(&amp;quot;Microsoft.XMLHTTP&amp;rdquo;);\r\n  }\r\n  http.onreadystatechange=function() {\r\n    if (http.readyState==4 &amp;amp;&amp;amp; http.status==200) {\r\n      response = http.responseText;\r\n      // do something with response\r\n    }\r\n  }\r\n  dest=&amp;rdquo;servlet.php?id=&amp;rdquo; + id;\r\n  http.open(&amp;quot;GET&amp;rdquo;, dest);\r\n  http.send();\r\n}&lt;/pre&gt;\r\n\r\n&lt;p&gt;If your web application only uses one Ajax call, it&amp;rsquo;s not that big of a deal to implement. The problem occurs, however, when your web application leverages lots of Ajax calls and you try to break the code apart to make it reusable.&lt;/p&gt;\r\n\r\n&lt;p&gt;The idea of Ajax is to send a request to some web server, wait for a response, and update your HTML page. It would be convenient to create a custom function like&amp;nbsp;&lt;code&gt;httpRequest()&lt;/code&gt;&amp;nbsp;that takes two parameters &amp;mdash; a request URL and a response function &amp;mdash; that could be reused throughout your system.&lt;/p&gt;\r\n\r\n&lt;p&gt;Once you start setting this up, however, you&amp;rsquo;ll immediately see that the simple task of making an Ajax call suddenly becomes a nightmare when you try to construct response function evaluations using&amp;nbsp;&lt;code&gt;eval()&lt;/code&gt;&amp;nbsp;and figuring out how to make your new function handle synchronous calls, asynchronous calls, and different response formats.&lt;/p&gt;\r\n\r\n&lt;p&gt;At the end of the day, the simple idea of creating a custom&amp;nbsp;&lt;code&gt;httpRequest()&lt;/code&gt;&amp;nbsp;function quickly turns into a big project.&lt;/p&gt;\r\n\r\n&lt;p&gt;The other advantage of jQuery is that it has additional Ajax functions and methods that you can use, which can further reduce development and debugging time.&lt;/p&gt;\r\n\r\n&lt;h3&gt;Hello Ajax. Meet jQuery.&lt;/h3&gt;\r\n\r\n&lt;p&gt;Among other advantages, one of my favorite features of jQuery is its ability to leverage Ajax with very little effort. To make an Ajax call, you can do something like this:&lt;/p&gt;\r\n\r\n&lt;pre&gt;\r\n$.Ajax({\r\n  type: &amp;quot;POST&amp;quot;,\r\n  url: &amp;quot;some.php&amp;quot;,\r\n  data: &amp;quot;name=John&amp;amp;location=Boston&amp;quot;,\r\n  success: function(msg){\r\n    alert( &amp;quot;Data Saved: &amp;quot; + msg );\r\n  }\r\n});&lt;/pre&gt;\r\n\r\n&lt;p&gt;If you&amp;rsquo;ve developed Ajax applications before without jQuery, you&amp;rsquo;ll immediately see the value here. jQuery has put all of the properties of Ajax into one simple API. You can control everything including the&amp;nbsp;&lt;code&gt;url&lt;/code&gt;,&amp;nbsp;&lt;code&gt;cache&lt;/code&gt;, success function, data type, and even synchronization, all from one neat declaration. It&amp;rsquo;s nothing short of beautiful.&lt;/p&gt;\r\n\r\n&lt;h3&gt;Get Started with Ajax + jQuery&lt;/h3&gt;\r\n\r\n&lt;p&gt;If you&amp;rsquo;re not using a JavaScript Web Development framework like jQuery or MooTools yet, and you&amp;rsquo;re planning on creating responsive web applications, you should leverage these awesome libraries.&lt;/p&gt;\r\n\r\n&lt;p&gt;For jQuery, the following list highlights some tutorials you can check out.&lt;/p&gt;', '2020-05-16 00:00:00', 'jquery, javascript, jquery nedir?,jquery ile neler yapılabilir', 1, 247);

-- --------------------------------------------------------

--
-- Tablo için tablo yapısı `blog_posts`
--

DROP TABLE IF EXISTS `blog_posts`;
CREATE TABLE IF NOT EXISTS `blog_posts` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `user_id` int(11) NOT NULL,
  `content_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `user_id` (`user_id`),
  KEY `blog_posts` (`content_id`)
) ENGINE=InnoDB AUTO_INCREMENT=272 DEFAULT CHARSET=utf8 COLLATE=utf8_turkish_ci;

--
-- Tablo döküm verisi `blog_posts`
--

INSERT INTO `blog_posts` (`id`, `user_id`, `content_id`) VALUES
(138, 1, 195),
(142, 1, 199),
(152, 3, 209),
(172, 1, 229),
(175, 1, 232),
(176, 1, 233),
(177, 1, 234),
(178, 1, 235),
(179, 1, 236),
(221, 1, 278),
(222, 1, 279);

-- --------------------------------------------------------

--
-- Tablo için tablo yapısı `blog_title`
--

DROP TABLE IF EXISTS `blog_title`;
CREATE TABLE IF NOT EXISTS `blog_title` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `home_title` varchar(500) COLLATE utf8_turkish_ci NOT NULL,
  `home_subtitle` varchar(500) COLLATE utf8_turkish_ci NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=3 DEFAULT CHARSET=utf8 COLLATE=utf8_turkish_ci;

--
-- Tablo döküm verisi `blog_title`
--

INSERT INTO `blog_title` (`id`, `home_title`, `home_subtitle`) VALUES
(1, 'Notlar, Paylaşımlar ve Gezi Üzerine', 'Html, Css, Bootstrap, Javascript, Jquery, Php, Mysql, Linux ve daha fazlası üzerine...');

-- --------------------------------------------------------

--
-- Tablo için tablo yapısı `blog_user`
--

DROP TABLE IF EXISTS `blog_user`;
CREATE TABLE IF NOT EXISTS `blog_user` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `user_name` varchar(100) COLLATE utf8_turkish_ci NOT NULL,
  `password` varchar(10) COLLATE utf8_turkish_ci NOT NULL,
  `email` varchar(100) COLLATE utf8_turkish_ci NOT NULL,
  `yetki` int(1) NOT NULL,
  `hakkimda` mediumtext COLLATE utf8_turkish_ci DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8 COLLATE=utf8_turkish_ci;

--
-- Tablo döküm verisi `blog_user`
--

INSERT INTO `blog_user` (`id`, `user_name`, `password`, `email`, `yetki`, `hakkimda`) VALUES
(1, 'özgür köktürk', '123', 'ozgurkokturk07@gmail.com', 1, 'Merhaba, bir kamu kurumunda \"Bilgisayar İşletmeni\" kadrosunda görev yapıyorum. Bilgisayar\'ın benim için olan hikayesini paylaşmak istiyorum.\r\nSanırım yıl 1999 veya 2000, dükkanımızda olan ve içinde bir çocuğun ilgisini çekebilecek pek fazla şey bulunmayan win98 yüklü bir bilgisayarla başladı bu yolculuk. O zamanlar bilgisayarı ne amaçla kullandıklarını anlamamıştım benim için bilgisayar; ekran uyku moduna girince efektlerle görsel bir show yapan bir ekrandı sadece.'),
(3, 'aysel köktürk', '123', 'aysel@gmail.com', 2, '1990 yılında Balıkesir Bigadiç’te doğdu. İlk öğrenimini Bigadiç Fatih İlköğretim Okulu, Orta öğrenimi Bigadiç Cumhuriyet Lisesi; yükseköğrenimini Konya Selçuk Üniversitesi Kadınhanı Meslek Yüksekokulu Bilgisayar Teknolojisi ve Programlama Bölümünde tamamladı. Memuriyete 2015 yılında Kırklareli Demirköy Adliyesinde 657 sayılı Kanun’un 4/B maddesi uyarınca Sözleşmeli Zabıt Katibi olarak başlamış olup, 2016 yılında Kırklareli Üniversitesi Bilgisayar İşletmeni kadrosuna atanmıştır. 2016 yılından itibaren Kırklareli Üniversitesi Personel Daire Başkanlığı Bilgisayar İşletmeni kadrosunda başlayıp; halen Kırklareli Üniversitesi Personel Daire Başkanlığı Şef kadrosunda görev yapmaktadır.Evlidir.');

--
-- Dökümü yapılmış tablolar için kısıtlamalar
--

--
-- Tablo kısıtlamaları `blog_content`
--
ALTER TABLE `blog_content`
  ADD CONSTRAINT `blog_content` FOREIGN KEY (`category_id`) REFERENCES `blog_category` (`id`);

--
-- Tablo kısıtlamaları `blog_posts`
--
ALTER TABLE `blog_posts`
  ADD CONSTRAINT `blog_posts` FOREIGN KEY (`content_id`) REFERENCES `blog_content` (`id`),
  ADD CONSTRAINT `blog_posts_ibfk_1` FOREIGN KEY (`user_id`) REFERENCES `blog_user` (`id`);
COMMIT;

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
